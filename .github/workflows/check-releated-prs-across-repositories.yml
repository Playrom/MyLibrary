name: Check All Related PRs Status Across Repositories

on:
  repository_dispatch:
    types: [check-related-prs]  # Triggered by dispatch from linked repositories
  pull_request:
    types: [opened, synchronize]  # Also triggered on main PR creation or update

jobs:
  check-related-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Start - Extract Related PRs from Main PR Body
        run: echo "Step 1: Starting extraction of related PRs from the main PR body..."

      - name: Extract Related PRs from Main PR Body
        id: extract_related_prs
        run: |
          echo "Extracting related PR URLs from the main PR description..."
          # Extract related PR URLs from the PR body
          RELATED_PRS=$(echo "${{ github.event.pull_request.body }}" | grep -Eo 'https://github.com/[a-zA-Z0-9._-]+/[a-zA-Z0-9._-]+/pull/[0-9]+')
          
          # Check if related PRs are found
          if [ -z "$RELATED_PRS" ]; then
            echo "No related PRs found. Assuming no dependencies."
            echo "all_merged=true" >> $GITHUB_ENV
            exit 0
          fi

          # Set the related PRs as output to be used in the next steps
          echo "Related PRs found: $RELATED_PRS"
          echo "related_prs=$RELATED_PRS" >> $GITHUB_OUTPUT

      - name: Start - Checking Status of Each Related PR
        run: echo "Step 2: Checking the merge status of each related PR..."

      - name: Check Status of Each Related PR
        id: check_related_prs
        run: |
          echo "Checking the merge status of the following PRs: ${{ steps.extract_related_prs.outputs.related_prs }}"

          # Initialize flag to track if all PRs are merged
          ALL_MERGED=true

          # Loop through each related PR URL and check its merge status
          for PR_URL in ${{ steps.extract_related_prs.outputs.related_prs }}; do
            echo "Checking PR: $PR_URL"

            PR_NUMBER=$(basename "$PR_URL")
            REPO_FULL_NAME=$(echo "$PR_URL" | sed 's|https://github.com/||' | sed 's|/pull/.*||')

            echo "Repository: $REPO_FULL_NAME, PR Number: $PR_NUMBER"
            
            # Get the PR status using GitHub API
            PR_STATUS=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/$REPO_FULL_NAME/pulls/$PR_NUMBER" | jq -r '.merged')

            # Check if PR is merged
            if [ "$PR_STATUS" != "true" ]; then
              ALL_MERGED=false
              echo "Related PR $PR_NUMBER in repository $REPO_FULL_NAME is NOT merged."
            else
              echo "Related PR $PR_NUMBER in repository $REPO_FULL_NAME is merged."
            fi
          done

          # If any PR is not merged, fail the job
          if [ "$ALL_MERGED" != "true" ]; then
            echo "Not all related PRs are merged. Failing the check."
            exit 1
          else
            echo "All related PRs are merged."
          fi

      - name: End - All Related PRs Merged
        if: ${{ steps.check_related_prs.outcome == 'success' }}
        run: echo "Step 3: All related PRs have been successfully merged. Proceeding..."
